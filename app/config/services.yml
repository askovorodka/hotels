# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Action\:
        resource: '../../src/AppBundle/Action'
        public: true
        tags: ['controller.service_arguments']

#    extension.listener:
#        class: Acme\DemoBundle\Listener\DoctrineExtensionListener
#        calls:
#            - [ setContainer, [ @service_container ] ]
#        tags:
#            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
#
#    gedmo.listener.loggable:
#        class: Gedmo\Loggable\LoggableListener
#        tags:
#            - { name: doctrine.event_subscriber, connection: default }
#        calls:
#            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Command\SwaggerCommand:
        arguments: ["@api_platform.swagger.normalizer.documentation", "@api_platform.metadata.resource.name_collection_factory", '%api_platform.title%', '%api_platform.description%', '%api_platform.version%', '%api_platform.formats%']
        tags: [ {name: "console.command"} ]

    Doctrine\Common\Annotations\Reader:
        class: Doctrine\Common\Annotations\AnnotationReader
        public: false

    AppBundle\Repository\LoggableEnitiyRepository:
        autowire: true

    app.service.yandex_geocode:
        public: true
        class: AppBundle\Services\YandexAddressDecoder

    app.service.sync:
        public: true
        class: AppBundle\Services\Sync\SyncService

    app.service.sync.queue:
        public: true
        class: AppBundle\Services\Sync\QueueService
        arguments:
          - '@service_container'

    app.service.sphinx:
        autowire: true
        public: true
        class: AppBundle\Services\SphinxSearchService

    app.service.hotels_search:
        autowire: true
        public: true
        class: AppBundle\Services\HotelsSearch\HotelsSearchService

    AppBundle\Services\HotelsCatalog\HotelsCatalogService:
        autowire: true
        public: true
        arguments:
            $priorityAreas: '%hotels_priority_areas%'
        
    app.listener.mobile_response_listener:
        public: false
        class: AppBundle\Listener\ResponseMobileListener
        tags:
            - { name: kernel.event_listener, event: kernel.response, priority: -2 }

    app.event_subscriber.search_method_subscriber:
        public: false
        class: AppBundle\EventSubscriber\SearchMethodSubscriber
        tags:
            - { name: kernel.event_subscriber }

    app.is_active.filter.configurator:
        class: AppBundle\Listener\IsActiveFilterConfigurator
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 5 }
        autoconfigure: false

    app.is_production.filter.configurator:
        class: AppBundle\Listener\IsProductionFilterConfigurator
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 6 }
        autoconfigure: false

    AppBundle\DataProvider\DealOffer\DealOfferMobileItemDataProvider:
        autowire: true
        tags: [ 'api_platform.item.data_provider' ]
        arguments:
            $iconsLinkPrefix: '%icons_link_prefix%'

    AppBundle\DataProvider\Admin\HotelDealOfferPriceItemDataProvider:
        autowire: true
        tags: [ 'api_platform.item.data_provider' ]
        
    AppBundle\DataProvider\Admin\AmenityItemDataProvider:
        autowire: true
        tags: ['api_platform.item.data_provider']

    AppBundle\Services\PhotoUrlService:
        autowire: true
        arguments:
            $photosLinkPrefix: '%photo_link_prefix%'

    AppBundle\Services\HotelsList\HotelsListCollectionStorage\HotelsListCollectionStorageInterface:
        class: AppBundle\Services\HotelsList\HotelsListCollectionStorage\HotelsListCollectionFileStorage
        arguments: ['%kernel.root_dir%/../var/hotels-list-collection']

    AppBundle\Services\HotelsList\HotelsListBuilder\AdministrativeAreaHotelsListBuilder:
        arguments:
            $priorityAreas: '%hotels_priority_areas%'

    AppBundle\Command\BuildHotelsListsCommand:
        arguments:
            $hotelsListBuilders:
                - '@AppBundle\Services\HotelsList\HotelsListBuilder\AdministrativeAreaHotelsListBuilder'
                - '@AppBundle\Services\HotelsList\HotelsListBuilder\HotelCategoryHotelsListBuilder'
                - '@AppBundle\Services\HotelsList\HotelsListBuilder\HotelAmenityHotelsListBuilder'
                - '@AppBundle\Services\HotelsList\HotelsListBuilder\RoomAmenityHotelsListBuilder'
            $listCollectionStorage: '@AppBundle\Services\HotelsList\HotelsListCollectionStorage\HotelsListCollectionStorageInterface'

    AppBundle\Services\HotelsSearch\HotelsSearchServiceInterface:
        class: AppBundle\Services\HotelsSearch\HotelsDbSearchService
        autowire: true

    AppBundle\Services\HotelsList\HotelsListServiceInterface:
        class: AppBundle\Services\HotelsList\HotelsListService
        autowire: true

    AppBundle\Services\HotelsCatalogV2\HotelsCatalogServiceInterface:
        class: AppBundle\Services\HotelsCatalogV2\HotelsCatalogService
        autowire: true

    GuzzleHttp\ClientInterface:
        class: GuzzleHttp\Client
        autowire: true

    AppBundle\Services\Geocoder\GeocoderInterface:
        #class: AppBundle\Services\Geocoder\YandexGeocoder
        class: AppBundle\Services\Geocoder\CrmGeocoder
        autowire: true

    AppBundle\Services\Quota\QuotasEditorServiceInterface:
        class: AppBundle\Services\Quota\QuotasEditorService
        autowire: true

    AppBundle\Services\HotelMap\HotelMapServiceInterface:
        class: AppBundle\Services\HotelMap\HotelMapService
        autowire: true

    AppBundle\DtoProvider\CityDtoProvider:
        class: AppBundle\DtoProvider\CityDtoProvider
        autowire: true

    AppBundle\Services\Rotation\Preset\PresetProviderInterface:
        class: AppBundle\Services\Rotation\Preset\PresetProvider
        autowire: true
